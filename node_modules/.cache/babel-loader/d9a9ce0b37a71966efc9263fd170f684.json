{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\reactecom\\\\src\\\\AdminPrivateRoute.js\",\n    _s = $RefreshSig$();\n\nimport axios, { Axios } from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport { Route, Redirect, useHistory } from 'react-router-dom';\nimport MasterLayout from './layouts/admin/MasterLayout';\nimport swal from 'sweetalert';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction AdminPrivateRoute(_ref) {\n  _s();\n\n  let { ...rest\n  } = _ref;\n  const history = useHistory();\n  const [Authenticated, setAuthenticated] = useState(false);\n  const [loading, setloading] = useState(true);\n  useEffect(() => {\n    axios.get('api/checkingAuthenticated').then(res => {\n      if (res.status === 200) {\n        setAuthenticated(true);\n      }\n\n      setloading(false);\n    });\n    return () => {\n      setAuthenticated(false);\n    };\n  }, []);\n  axios.interceptors.response.use(undefined, function axiosRetryInterceptor(err) {\n    if (err.response.status === 401) {\n      swal(\"Unauthorized\", err.response.data.message, \"warning\");\n      history.push('/');\n    }\n\n    return Promise.reject(err);\n  });\n  axios.interceptors.response.use(function (response) {\n    return response;\n  }, function (error) {\n    if (error.response.status === 403) // Access Denied\n      {\n        swal(\"Forbidden\", err.response.data.message, \"warning\");\n        history.push('/');\n      } else if (error.response.status === 404) // Page Not Found\n      {\n        swal(\"Forbidden\", err.response.data.message, \"warning\");\n        history.push('/');\n      }\n  });\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Route, { ...rest,\n    render: _ref2 => {\n      let {\n        props,\n        location\n      } = _ref2;\n      return Authenticated ? /*#__PURE__*/_jsxDEV(MasterLayout, { ...props\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 19\n      }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n        to: {\n          pathname: \"/login\",\n          state: {\n            from: location\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 19\n      }, this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this);\n}\n\n_s(AdminPrivateRoute, \"93YSMh6h+2IHGh39rorsPBcp+Yg=\", false, function () {\n  return [useHistory];\n});\n\n_c = AdminPrivateRoute;\nexport default AdminPrivateRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"AdminPrivateRoute\");","map":{"version":3,"sources":["C:/xampp/htdocs/reactecom/src/AdminPrivateRoute.js"],"names":["axios","Axios","React","useEffect","useState","Route","Redirect","useHistory","MasterLayout","swal","AdminPrivateRoute","rest","history","Authenticated","setAuthenticated","loading","setloading","get","then","res","status","interceptors","response","use","undefined","axiosRetryInterceptor","err","data","message","push","Promise","reject","error","props","location","pathname","state","from"],"mappings":"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","sourcesContent":["import axios, { Axios } from 'axios';\r\nimport React, { useEffect, useState} from 'react';\r\nimport {Route, Redirect, useHistory } from 'react-router-dom';\r\nimport MasterLayout from './layouts/admin/MasterLayout';\r\nimport swal from 'sweetalert';\r\n\r\nfunction AdminPrivateRoute({...rest}){\r\n\r\n    const history = useHistory();\r\n    const [Authenticated, setAuthenticated] = useState(false);\r\n    const [loading, setloading] = useState(true);\r\n\r\n\r\n    useEffect(() =>{\r\n\r\n        axios.get('api/checkingAuthenticated').then(res=>{\r\n            if(res.status === 200)\r\n            {\r\n                setAuthenticated(true);\r\n            }\r\n            setloading(false);\r\n        });\r\n\r\n        return()=>{\r\n            setAuthenticated(false);\r\n        };\r\n    },[]);\r\n\r\n    axios.interceptors.response.use(undefined, function axiosRetryInterceptor(err){\r\n        if(err.response.status === 401)\r\n        {\r\n            swal(\"Unauthorized\", err.response.data.message,\"warning\");\r\n            history.push('/');\r\n        }\r\n        return Promise.reject(err);\r\n    });\r\n\r\n    axios.interceptors.response.use(function(response){\r\n            return response;\r\n        }, \r\n        function(error){\r\n            if(error.response.status === 403) // Access Denied\r\n            {\r\n                swal(\"Forbidden\", err.response.data.message,\"warning\");\r\n                history.push('/');\r\n            }\r\n            else if(error.response.status === 404) // Page Not Found\r\n            {\r\n                swal(\"Forbidden\", err.response.data.message,\"warning\");\r\n                history.push('/');\r\n            }\r\n        }\r\n    );\r\n\r\n    if(loading)\r\n    {\r\n        return <h1>Loading...</h1>\r\n    }\r\n\r\n    return(\r\n        <Route {...rest}\r\n            render={({props, location}) =>\r\n                Authenticated ? \r\n                ( <MasterLayout {...props} /> ) :\r\n                ( <Redirect to={{pathname:\"/login\", state: {from: location} }} /> )\r\n            }\r\n        />\r\n    );\r\n\r\n}\r\n\r\nexport default AdminPrivateRoute;"]},"metadata":{},"sourceType":"module"}