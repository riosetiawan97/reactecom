{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\reactecom\\\\src\\\\AdminPrivateRoute.js\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport MasterLayout from './layouts/admin/MasterLayout';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction AdminPrivateRoute(_ref) {\n  _s();\n\n  let { ...rest\n  } = _ref;\n  const [Authenticated, setAuthenticated] = useState(false);\n  const [loading, setloading] = useState(true);\n  useEffect(() => {\n    axios.get('api/checkingAuthenticated').then(res => {\n      if (res.status === 200) {\n        setAuthenticated(true);\n      }\n\n      setloading(false);\n    });\n    return () => {\n      setAuthenticated(false);\n    };\n  }, []);\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Route, { ...rest,\n    render: _ref2 => {\n      let {\n        props,\n        location\n      } = _ref2;\n      return Authenticated ? /*#__PURE__*/_jsxDEV(MasterLayout, { ...props\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 19\n      }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n        to: {\n          pathname: \"/login\",\n          state: {\n            from: location\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 19\n      }, this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n}\n\n_s(AdminPrivateRoute, \"0v9oqRL58szUHZsycVZLDWFVQdU=\");\n\n_c = AdminPrivateRoute;\nexport default AdminPrivateRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"AdminPrivateRoute\");","map":{"version":3,"sources":["C:/xampp/htdocs/reactecom/src/AdminPrivateRoute.js"],"names":["axios","React","useEffect","useState","Route","Redirect","MasterLayout","AdminPrivateRoute","rest","Authenticated","setAuthenticated","loading","setloading","get","then","res","status","props","location","pathname","state","from"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAAQC,KAAR,EAAeC,QAAf,QAA8B,kBAA9B;AACA,OAAOC,YAAP,MAAyB,8BAAzB;;;AAEA,SAASC,iBAAT,OAAqC;AAAA;;AAAA,MAAV,EAAC,GAAGC;AAAJ,GAAU;AAEjC,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCP,QAAQ,CAAC,KAAD,CAAlD;AACA,QAAM,CAACQ,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,IAAD,CAAtC;AAEAD,EAAAA,SAAS,CAAC,MAAK;AACXF,IAAAA,KAAK,CAACa,GAAN,CAAU,2BAAV,EAAuCC,IAAvC,CAA4CC,GAAG,IAAE;AAC7C,UAAGA,GAAG,CAACC,MAAJ,KAAe,GAAlB,EACA;AACIN,QAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACH;;AACDE,MAAAA,UAAU,CAAC,KAAD,CAAV;AACH,KAND;AAQA,WAAM,MAAI;AACNF,MAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACH,KAFD;AAGH,GAZQ,EAYP,EAZO,CAAT;;AAcA,MAAGC,OAAH,EACA;AACI,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AAED,sBACI,QAAC,KAAD,OAAWH,IAAX;AACI,IAAA,MAAM,EAAE;AAAA,UAAC;AAACS,QAAAA,KAAD;AAAQC,QAAAA;AAAR,OAAD;AAAA,aACJT,aAAa,gBACX,QAAC,YAAD,OAAkBQ;AAAlB;AAAA;AAAA;AAAA;AAAA,cADW,gBAEX,QAAC,QAAD;AAAU,QAAA,EAAE,EAAE;AAACE,UAAAA,QAAQ,EAAC,QAAV;AAAoBC,UAAAA,KAAK,EAAE;AAACC,YAAAA,IAAI,EAAEH;AAAP;AAA3B;AAAd;AAAA;AAAA;AAAA;AAAA,cAHE;AAAA;AADZ;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH;;GAlCQX,iB;;KAAAA,iB;AAoCT,eAAeA,iBAAf","sourcesContent":["import axios from 'axios';\r\nimport React, { useEffect, useState } from 'react';\r\nimport {Route, Redirect} from 'react-router-dom';\r\nimport MasterLayout from './layouts/admin/MasterLayout';\r\n\r\nfunction AdminPrivateRoute({...rest}){\r\n\r\n    const [Authenticated, setAuthenticated] = useState(false);\r\n    const [loading, setloading] = useState(true);\r\n\r\n    useEffect(() =>{\r\n        axios.get('api/checkingAuthenticated').then(res=>{\r\n            if(res.status === 200)\r\n            {\r\n                setAuthenticated(true);\r\n            }\r\n            setloading(false);\r\n        });\r\n\r\n        return()=>{\r\n            setAuthenticated(false);\r\n        };\r\n    },[]);\r\n\r\n    if(loading)\r\n    {\r\n        return <h1>Loading...</h1>\r\n    }\r\n\r\n    return(\r\n        <Route {...rest}\r\n            render={({props, location}) =>\r\n                Authenticated ? \r\n                ( <MasterLayout {...props} /> ) :\r\n                ( <Redirect to={{pathname:\"/login\", state: {from: location} }} /> )\r\n            }\r\n        />\r\n    );\r\n\r\n}\r\n\r\nexport default AdminPrivateRoute;"]},"metadata":{},"sourceType":"module"}